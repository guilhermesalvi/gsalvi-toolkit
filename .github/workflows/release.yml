# CD Workflow: Publish and Sync to Main
name: CD - Publish and Sync to Main

on:
  pull_request:
    types: [ closed ]
    branches:
      - release

permissions:
  contents: write
  pull-requests: write

jobs:
  publish:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build Solution
        run: dotnet build --configuration Release --no-restore

      - name: Determine Package Version (Timestamp)
        id: pkgversion
        run: |
          VERSION="0.1.0-beta.$(date -u +'%Y%m%d%H%M%S')"
          echo "Using version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Pack Project
        run: dotnet pack --configuration Release --no-build --output ./artifacts /p:PackageVersion=${{ steps.pkgversion.outputs.version }}

      - name: Publish to NuGet
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: dotnet nuget push ./artifacts/*.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json

  sync_to_main:
    needs: publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout release branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: release

      - name: Create Pull Request from release to main via CLI
        run: |
          pr_title="${{ github.event.pull_request.title }}"
          pr_body="${{ github.event.pull_request.body }}"
          pr_author="${{ github.event.pull_request.user.login }}"
          pr_author_url="https://github.com/${{ github.event.pull_request.user.login }}"

          full_body="ðŸ”€ **Autor original:** [$pr_author]($pr_author_url)

          ---
          
            $pr_body"
          
            pr_url=$(gh pr create --base main --head release --title "$pr_title" --body "$full_body" || true)
          
            if [[ "$pr_url" == https* ]]; then
          echo "Pull Request created: $pr_url"
            echo "$pr_url" > pr_url.txt
            else
            echo "PR already exists or failed to create."
            fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Enable Pull Request Autocomplete
        run: |
          pr_number=$(gh pr list --head release --base main --json number --jq '.[0].number')
          if [[ -n "$pr_number" ]]; then
            echo "Auto-merging PR #$pr_number..."
            gh pr merge "$pr_number" --auto --merge
          else
            echo "No matching PR found. Skipping auto-merge."
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
